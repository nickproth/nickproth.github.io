[
  {
    "objectID": "posts/mlb-money-problem/index.html",
    "href": "posts/mlb-money-problem/index.html",
    "title": "MLB’s Money Problem",
    "section": "",
    "text": "The MLB has a money problem and I don’t like it.\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "Dumbell.html",
    "href": "Dumbell.html",
    "title": "Nicks Sports blog",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggalt)\n\nWarning: package 'ggalt' was built under R version 4.4.3\n\n\nRegistered S3 methods overwritten by 'ggalt':\n  method                  from   \n  grid.draw.absoluteGrob  ggplot2\n  grobHeight.absoluteGrob ggplot2\n  grobWidth.absoluteGrob  ggplot2\n  grobX.absoluteGrob      ggplot2\n  grobY.absoluteGrob      ggplot2\n\nlibrary(ggtext)\n\nWarning: package 'ggtext' was built under R version 4.4.3\n\n\n\nlogs &lt;- read_csv(\"https://mattwaite.github.io/sportsdatafiles/footballlogs24.csv\")\n\nRows: 1711 Columns: 54\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): HomeAway, Opponent, Result, TeamFull, TeamURL, Outcome, Team, Con...\ndbl  (45): Game, PassingCmp, PassingAtt, PassingPct, PassingYds, PassingTD, ...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\npenalties &lt;- logs|&gt;\n  group_by(Team, Conference) |&gt; \n  summarise(\n    OffensivePenalties = sum(Penalties), \n    DefensivePenalties = sum(DefPenalties)) |&gt;\n  filter(Conference == \"Big Ten Conference\")\n\n`summarise()` has grouped output by 'Team'. You can override using the\n`.groups` argument.\n\n\n\nggplot() + \n  geom_dumbbell(\n    data=penalties, \n    aes(y=Team, x=OffensivePenalties, xend=DefensivePenalties),\n    size = 2,\n    colour = \"black\",\n    colour_x = \"blue\",\n    colour_xend = \"orange\")\n\nWarning: Using the `size` aesthetic with geom_segment was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Nick Roth is a lifelong sports fan and certified baseball stats nerd. He is passionate about sharing real sports knowledge and takes without all of teh extra nonsense."
  },
  {
    "objectID": "building.html",
    "href": "building.html",
    "title": "Nicks Sports blog",
    "section": "",
    "text": "library(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\nmoney &lt;- read.csv((\"money\"))\n\n\nggplot() + \n  geom_point(data = money, aes(x = Wins, y = Payroll, \n                               color = case_when(\n                                 Team == \"Los Angeles Dodgers\" ~ \"blue\",\n                                 Team == \"New York Yankees\" ~ \"navy\",\n                                 Team == \"New York Mets\" ~ \"orange\",\n                                 Team == \"Chicago White Sox\" ~ \"black\",\n                                 Team == \"Oakland Athletics\" ~ \"darkgreen\", \n                                 TRUE ~ \"grey\"\n                               ))) + \n  scale_color_identity() +  \n  geom_text(data = subset(money, Team == \"Los Angeles Dodgers\"),\n            aes(x = Wins, y = Payroll, label = \"Dodgers\"),\n            vjust = -1.5, color = \"black\", size = 2.5) +\n  geom_text(data = subset(money, Team == \"New York Yankees\"),\n            aes(x = Wins + 2, y = Payroll, label = \"Yankees\"),\n            vjust = 1.5, color = \"black\", size = 2.5) + \n  geom_text(data = subset(money, Team == \"New York Mets\"),\n            aes(x = Wins, y = Payroll, label = \"Mets\"),\n            vjust = 1.5, color = \"black\", size = 2.5) + \n  geom_text(data = subset(money, Team == \"Chicago White Sox\"),\n            aes(x = Wins + 3, y = Payroll, label = \"White Sox\"),\n            vjust = 1.5, color = \"black\", size = 2.5) +  \n  geom_text(data = subset(money, Team == \"Oakland Athletics\"),\n            aes(x = Wins, y = Payroll, label = \"Athletics\"),\n            vjust = -1, color = \"black\", size = 2.5) + \n  scale_y_continuous(labels = scales::label_dollar(scale = 1e-6, suffix = \"M\")) +\n  theme_minimal() + \n  labs(\n    title = \"MLB Payroll vs Wins for 2024\",\n    subtitle = \"Exploring the relationship between payrolls and wins\",\n    x = \"Total Wins\",\n    y = \"Total Payroll (in millions)\"\n  ) +\n  annotate(\"text\", x = 95, y = -70000000, label = \"Source: Baseball Reference\", size = 3, color = \"black\", hjust = 0) +\n  annotate(\"text\", x = 95, y = -80000000, label = \"Credit: Nick Roth\", size = 3, color = \"black\", hjust = 0)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NickSportsBlog",
    "section": "",
    "text": "MLB’s Money Problem\n\n\n\n\n\n\nmlb\n\n\nbaseball\n\n\nsalarycap\n\n\n\n\n\n\n\n\n\nApr 1, 2025\n\n\nNick Roth\n\n\n\n\n\n\nNo matching items"
  }
]